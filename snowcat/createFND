#! /bin/sh

# grep -oE "RITM[0-9]+|\"u_sku\":\"\",\"sys_id\":\"[a-z0-9]+\"" output.txt | tr '\n' ':' | tr -d '"' | awk -F':' '{print "Ticket: "$1"\nURL: [REMOVED]"$5"%26sysparm_stack%3D%26sysparm_view%3D"}'
# Ticket: RITM6139454
# URL: [REMOVED]

FILE=$1;
LOG="${FILE}.log";
echo "" > ${LOG};
URLBASE=$(jq -r '.SNOWURL' <config.json | sed "s/\/api/\//g");

createFND()
{
  cat <<EOF >> tmpFND.json
                  {
                      "Name": "v_brief_desc",
                      "DataSource": "static",
                      "DataType": "string",
                      "Action": "",
                      "Value": $1
                  },
                  {
                      "Name": "v_please_describe_your_issue",
                      "DataSource": "static",
                      "DataType": "string",
                      "Action": "",
                      "Value": "Please visit this main guide: [REMOVED]\n\n$2"
                  }
              ]
          }
      ]
  }
EOF
  echo "$1";
  # ./snowcat-mac-amd64 config tmpFND.json;
  [[ $(uname | grep -E "Darwin|BSD") ]] && SCRIPT=snowcat-mac-amd64 || SCRIPT=snowcat-linux-amd64;
  ./${SCRIPT} config tmpFND.json | grep -oE "RITM[0-9]+|\"u_sku\":\"\",\"sys_id\":\"[a-z0-9]+\"" | tr '\n' ':' | tr -d '"' | awk -F':' -v BASE=$URLBASE '{print "Ticket: "$1"\nURL: "BASE"nav_to.do?uri=%2Fsc_req_item.do%3Fsys_id%3D"$5"%26sysparm_stack%3D%26sysparm_view%3D"}' | tee -a ${LOG};
}

templateFND()
{
  COUNT=0;
  LENGTH=$(jq length <$FILE);

  while [[ $COUNT -lt $LENGTH ]]; do
    [[ -f tmpFND.json ]] && rm -rf tmpFND.json;
    cp templateFND.json tmpFND.json;

    SHORTDESC=$(jq --argjson n $COUNT '.[$n].ShortDesc' <$FILE);
    DESC=$(jq -r --argjson n $COUNT '.[$n] | del(.ShortDesc) | .[]' <$FILE | tr '\n' '|' | sed "s/|/\\\n/g");
    createFND "$SHORTDESC" "$DESC"
    ((COUNT+=1));
  done;
  echo "DONE!\nYour RITMs and their URLs was logged to file: [ ${LOG} ]";
}

main()
{
  if [[ $(jq <$FILE 2>/dev/null) ]]; then
    templateFND;
  else
    echo "This file is not properly set up to be parsed through jq";
  fi
}

main;
